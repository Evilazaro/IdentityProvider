name: Deploy Identity Provider Dev Environment
# Run when commits are pushed to main
on:
  workflow_dispatch:

# Set up permissions for deploying with secretless Azure federated credentials
# https://learn.microsoft.com/en-us/azure/developer/github/connect-from-azure?tabs=azure-portal%2Clinux#set-up-azure-login-with-openid-connect-authentication
permissions:
  id-token: write
  contents: read


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Application
        run: |
          echo "Installing .NET SDK"
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          sudo add-apt-repository ppa:dotnet/backports -y && \
          sudo apt-get update && \
          sudo apt-get install -y dotnet-sdk-9.0
          sudo dotnet workload install aspire
          echo "Building application"
          dotnet restore ./src/Contoso.IdentityProvider.sln
          dotnet build ./src/Contoso.IdentityProvider.sln --configuration Release --no-restore
        shell: bash

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
      AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
    steps:
      - name: Install .NET SDK and AZD
        run: |
          echo "Installing .NET SDK"
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          sudo add-apt-repository ppa:dotnet/backports -y && \
          sudo apt-get update && \
          sudo apt-get install -y dotnet-sdk-9.0
          sudo dotnet workload install aspire
        shell: bash
      
      - name: Install azd
        uses: Azure/setup-azd@v2
        
      - name: Log in with Azure (Federated Credentials)
        run: |
            azd auth login \
            --client-id ${{ env.AZURE_CLIENT_ID }} \
            --federated-credential-provider "github" \
            --tenant-id ${{ env.AZURE_TENANT_ID }}
        shell: bash

      - name: Provision Infrastructure
        run: |
          azd env new dev --no-prompt
          azd provision --no-prompt
        env:
          AZD_INITIAL_ENVIRONMENT_CONFIG: ${{ secrets.AZD_INITIAL_ENVIRONMENT_CONFIG }}

      - name: Deploy Application
        run: azd deploy --no-prompt
